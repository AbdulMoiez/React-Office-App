{"version":3,"file":"static/js/721.19cc658f.chunk.js","mappings":"oQAWMA,GAAYC,EAAAA,EAAAA,aAAW,SAACC,EAAOC,IACnCC,EAAAA,EAAAA,qBAAoBD,GAAK,iBAAO,CAC9BE,eAAc,WACZC,GAAQ,EACV,EACD,IAED,IAAAC,GAAwBC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhCI,EAAIF,EAAA,GAAEH,EAAOG,EAAA,GACpBG,GAAsCJ,EAAAA,EAAAA,UAAS,CAC7CK,MAAM,IAAIC,MAAOC,cAAcC,MAAM,EAAG,IACxCC,QAAS,mBACTC,SAAU,GACVC,OAAQ,GACRC,OAAQ,eACRC,KAAM,mBACNC,GAAAZ,EAAAA,EAAAA,GAAAE,EAAA,GAPKW,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAS5BG,EAAc,WAAH,OAASnB,GAAQ,EAAO,EAGnCoB,EAAoB,SAACC,GACzB,IAAAC,EAAwBD,EAAEE,OAAlBC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACdP,GAAe,SAACQ,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACpBD,GAAS,IAAAE,EAAAA,EAAAA,GAAA,GACXJ,EAAOC,GAAK,GAEjB,EA+DA,OACEI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACAC,EAAAA,EAAAA,KAACC,EAAAA,GAAc,KACbD,EAAAA,EAAAA,KAACE,EAAAA,EAAM,CAACC,QAAQ,SAASC,QA1EV,WAAH,OAASpC,GAAQ,EAAM,EA0EU+B,SAAC,sBAK9CF,EAAAA,EAAAA,MAACQ,EAAAA,EAAK,CAAChC,KAAMA,EAAMiC,OAAQnB,EAAYY,SAAA,EACrCC,EAAAA,EAAAA,KAACK,EAAAA,EAAME,OAAM,CAACC,aAAW,EAAAT,UACvBC,EAAAA,EAAAA,KAACK,EAAAA,EAAMI,MAAK,CAAAV,SAAC,uBAEfC,EAAAA,EAAAA,KAACK,EAAAA,EAAMK,KAAI,CAAAX,UACTF,EAAAA,EAAAA,MAACc,EAAAA,EAAI,CAAAZ,SAAA,EACHF,EAAAA,EAAAA,MAACc,EAAAA,EAAKC,MAAK,CAACC,UAAU,OAAOC,UAAU,iBAAgBf,SAAA,EACrDC,EAAAA,EAAAA,KAACW,EAAAA,EAAKI,MAAK,CAAAhB,SAAC,kBACZC,EAAAA,EAAAA,KAACW,EAAAA,EAAKK,QAAO,CACXjC,KAAK,OACLS,KAAK,OACLC,MAAOR,EAAYV,KACnB0C,SAAU7B,QAGdS,EAAAA,EAAAA,MAACc,EAAAA,EAAKC,MAAK,CAACC,UAAU,OAAOC,UAAU,oBAAmBf,SAAA,EACxDC,EAAAA,EAAAA,KAACW,EAAAA,EAAKI,MAAK,CAAAhB,SAAC,aACZF,EAAAA,EAAAA,MAACc,EAAAA,EAAKO,OAAM,CACV,aAAW,yBACX1B,KAAK,UACLC,MAAOR,EAAYN,QACnBsC,SAAU7B,EAAkBW,SAAA,EAE5BC,EAAAA,EAAAA,KAAA,UAAQP,MAAM,mBAAkBM,SAAC,sBACjCC,EAAAA,EAAAA,KAAA,UAAQP,MAAM,aAAYM,SAAC,gBAC3BC,EAAAA,EAAAA,KAAA,UAAQP,MAAM,gBAAeM,SAAC,mBAC9BC,EAAAA,EAAAA,KAAA,UAAQP,MAAM,gBAAeM,SAAC,mBAC9BC,EAAAA,EAAAA,KAAA,UAAQP,MAAM,oBAAmBM,SAAC,uBAClCC,EAAAA,EAAAA,KAAA,UAAQP,MAAM,eAAcM,SAAC,kBAC7BC,EAAAA,EAAAA,KAAA,UAAQP,MAAM,gBAAeM,SAAC,yBAIlCF,EAAAA,EAAAA,MAACc,EAAAA,EAAKC,MAAK,CAACC,UAAU,OAAOC,UAAU,oBAAmBf,SAAA,EACxDC,EAAAA,EAAAA,KAACW,EAAAA,EAAKI,MAAK,CAAAhB,SAAC,cACZC,EAAAA,EAAAA,KAACmB,EAAAA,EAAa,CAACL,UAAU,oBAAoBM,MAAM,WAAUrB,UAC3DC,EAAAA,EAAAA,KAACW,EAAAA,EAAKK,QAAO,CACXK,GAAG,WACH7B,KAAK,WACLC,MAAOR,EAAYL,SACnBqC,SAAU7B,EACVkC,MAAO,CAAEC,OAAQ,iBAIvB1B,EAAAA,EAAAA,MAACc,EAAAA,EAAKC,MAAK,CAACC,UAAU,OAAOC,UAAU,iBAAgBf,SAAA,EACrDC,EAAAA,EAAAA,KAACW,EAAAA,EAAKI,MAAK,CAAAhB,SAAC,YACZC,EAAAA,EAAAA,KAACW,EAAAA,EAAKK,QAAO,CACXjC,KAAK,SACLS,KAAK,SACLC,MAAOR,EAAYJ,OACnBoC,SAAU7B,QAGdS,EAAAA,EAAAA,MAACc,EAAAA,EAAKC,MAAK,CAACC,UAAU,OAAOC,UAAU,oBAAmBf,SAAA,EACxDC,EAAAA,EAAAA,KAACW,EAAAA,EAAKI,MAAK,CAAAhB,SAAC,cACZF,EAAAA,EAAAA,MAACc,EAAAA,EAAKO,OAAM,CACV,aAAW,yBACX1B,KAAK,SACLC,MAAOR,EAAYH,OACnBmC,SAAU7B,EAAkBW,SAAA,EAE5BC,EAAAA,EAAAA,KAAA,UAAQP,MAAM,eAAcM,SAAC,kBAC7BC,EAAAA,EAAAA,KAAA,UAAQP,MAAM,YAAWM,SAAC,gBAC1BC,EAAAA,EAAAA,KAAA,UAAQP,MAAM,eAAcM,SAAC,kBAC7BC,EAAAA,EAAAA,KAAA,UAAQP,MAAM,gBAAeM,SAAC,yBAGlCF,EAAAA,EAAAA,MAACc,EAAAA,EAAKC,MAAK,CAACC,UAAU,OAAOC,UAAU,oBAAmBf,SAAA,EACxDC,EAAAA,EAAAA,KAACW,EAAAA,EAAKI,MAAK,CAAAhB,SAAC,kBACZF,EAAAA,EAAAA,MAACc,EAAAA,EAAKO,OAAM,CACV,aAAW,yBACX1B,KAAK,OACLC,MAAOR,EAAYF,KACnBkC,SAAU7B,EAAkBW,SAAA,EAE5BC,EAAAA,EAAAA,KAAA,UAAQP,MAAM,iBAAgBM,SAAC,oBAC/BC,EAAAA,EAAAA,KAAA,UAAQP,MAAM,iBAAgBM,SAAC,oBAC/BC,EAAAA,EAAAA,KAAA,UAAQP,MAAM,aAAYM,SAAC,2BAKnCF,EAAAA,EAAAA,MAACQ,EAAAA,EAAMmB,OAAM,CAAAzB,SAAA,EACXC,EAAAA,EAAAA,KAACE,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QAASjB,EAAYY,SAAC,WAGlDC,EAAAA,EAAAA,KAACE,EAAAA,EAAM,CAACC,QAAQ,UAAUC,QApIb,SAACf,GACpBA,EAAEoC,iBACF,IAAQC,EAAe9D,EAAf8D,WAGF7C,EAAuC,KAA9BI,EAAYJ,OAAO8C,OAAgB,EAAIC,WAAW3C,EAAYJ,QAEvEgD,GAAUlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXV,GAAW,IACdJ,OAAQA,IAICiD,EAAAA,EAASC,YACjBC,WAAW,oBACXC,IAAIJ,GACJK,MAAK,SAACC,GAxCTC,EAAAA,GAAMC,QAAQ,qBAAsB,CAClCC,SAAU,gBACVC,UAAW,KACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,SAkCL,IAAMC,EAAcZ,EAAOa,GAC3BC,QAAQC,IAAI,qBAAsBH,GAClCrB,GAAU/B,EAAAA,EAAAA,GAAC,CAAEqD,GAAID,GAAgBlB,GACnC,IACCsB,OAAM,SAACC,GAjCZhB,EAAAA,GAAMgB,MAAM,yBAA0B,CACpCd,SAAU,gBACVC,UAAW,KACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,SA2BHG,QAAQG,MAAM,qCAAsCA,EACtD,IAEFlE,EAAe,CACbX,MAAM,IAAIC,MAAOC,cAAcC,MAAM,EAAG,IACxCC,QAAS,mBACTC,SAAU,GACVC,OAAQ,GACRC,OAAQ,eACRC,KAAM,kBAEV,EAiGwDgB,SAAC,mBAO3D,IAEA,W","sources":["components/EntryForm.js"],"sourcesContent":["import React, { useState, forwardRef, useImperativeHandle } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/firestore';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst EntryForm = forwardRef((props, ref) => {\r\n  useImperativeHandle(ref, () => ({\r\n    openModalEntry() {\r\n      setShow(true);\r\n    },\r\n  }));\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [expenseData, setExpenseData] = useState({\r\n    date: new Date().toISOString().slice(0, 10),\r\n    account: 'Electricity Bill',\r\n    comments: '',\r\n    amount: '',\r\n    paidBy: 'Cash in Hand',\r\n    type: 'Office Expense',\r\n  });\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setExpenseData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  const successMessage = () => {\r\n    toast.success('Save SuccessFully!', {\r\n      position: \"bottom-center\",\r\n      autoClose: 1200,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"dark\",\r\n    });\r\n  };\r\n\r\nconst errorMessage = () => {\r\n  toast.error('Error saving expense !', {\r\n    position: \"bottom-center\",\r\n    autoClose: 1200,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"dark\",\r\n});\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { handleSave } = props;\r\n  \r\n    // Check if the amount is empty\r\n    const amount = expenseData.amount.trim() === '' ? 0 : parseFloat(expenseData.amount);\r\n  \r\n    const newExpense = {\r\n      ...expenseData,\r\n      amount: amount,\r\n    };\r\n  \r\n    // Store the data in Firestore\r\n    const db = firebase.firestore();\r\n    db.collection('Expenses-Details')\r\n      .add(newExpense)\r\n      .then((docRef) => {\r\n        successMessage();\r\n        const generatedId = docRef.id;\r\n        console.log('Auto-generated ID:', generatedId);\r\n        handleSave({ id: generatedId, ...newExpense });\r\n      })\r\n      .catch((error) => {\r\n        errorMessage();\r\n        console.error('Error adding expense to Firestore:', error);\r\n      });\r\n  \r\n    setExpenseData({\r\n      date: new Date().toISOString().slice(0, 10),\r\n      account: 'Electricity Bill',\r\n      comments: '',\r\n      amount: '',\r\n      paidBy: 'Cash in Hand',\r\n      type: 'Office Expense',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <ToastContainer />\r\n      <Button variant=\"danger\" onClick={handleShow}>\r\n        Add New Expenses\r\n        \r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add New Expense</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label>Expense Date</Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                name=\"date\"\r\n                value={expenseData.date}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Account</Form.Label>\r\n              <Form.Select\r\n                aria-label=\"Default select example\"\r\n                name=\"account\"\r\n                value={expenseData.account}\r\n                onChange={handleInputChange}\r\n              >\r\n                <option value=\"Electricity Bill\">Electricity Bill</option>\r\n                <option value=\"Petty Cash\">Petty Cash</option>\r\n                <option value=\"Internet Bill\">Internet Bill</option>\r\n                <option value=\"Water Filling\">Water Filling</option>\r\n                <option value=\"Guest Refreshment\">Guest Refreshment</option>\r\n                <option value=\"Meals & Tips\">Meals & Tips</option>\r\n                <option value=\"Miscellaneous\">Miscellaneous</option>\r\n                \r\n              </Form.Select>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Comments</Form.Label>\r\n              <FloatingLabel controlId=\"floatingTextarea2\" label=\"Comments\">\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  name=\"comments\"\r\n                  value={expenseData.comments}\r\n                  onChange={handleInputChange}\r\n                  style={{ height: '100px' }}\r\n                />\r\n              </FloatingLabel>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label>Amount</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                name=\"amount\"\r\n                value={expenseData.amount}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Paid Buy</Form.Label>\r\n              <Form.Select\r\n                aria-label=\"Default select example\"\r\n                name=\"paidBy\"\r\n                value={expenseData.paidBy}\r\n                onChange={handleInputChange}\r\n              >\r\n                <option value=\"Cash in Hand\">Cash in Hand</option>\r\n                <option value=\"Usama Ali\"> Usama Ali</option>\r\n                <option value=\"Sir Mujassir\">Sir Mujassir</option>\r\n                <option value=\"Sir Omer Aziz\">Sir Omer Aziz</option>\r\n              </Form.Select>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Expense Type</Form.Label>\r\n              <Form.Select\r\n                aria-label=\"Default select example\"\r\n                name=\"type\"\r\n                value={expenseData.type}\r\n                onChange={handleInputChange}\r\n              >\r\n                <option value=\"Office Expense\">Office Expense</option>\r\n                <option value=\"Common Expense\">Common Expense</option>\r\n                <option value=\"Petty Cash\">Petty Cash</option>\r\n              </Form.Select>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleSubmit}>\r\n            Submit\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default EntryForm;\r\n"],"names":["EntryForm","forwardRef","props","ref","useImperativeHandle","openModalEntry","setShow","_useState","useState","_useState2","_slicedToArray","show","_useState3","date","Date","toISOString","slice","account","comments","amount","paidBy","type","_useState4","expenseData","setExpenseData","handleClose","handleInputChange","e","_e$target","target","name","value","prevState","_objectSpread","_defineProperty","_jsxs","_Fragment","children","_jsx","ToastContainer","Button","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","Form","Group","className","controlId","Label","Control","onChange","Select","FloatingLabel","label","as","style","height","Footer","preventDefault","handleSave","trim","parseFloat","newExpense","firebase","firestore","collection","add","then","docRef","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","generatedId","id","console","log","catch","error"],"sourceRoot":""}